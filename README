php-pygments - v1.0.0
--------------------------------------------------------------------------------
This project provides a PHP extension that wraps the pygments Python library. It
uses libpython to load an interpreter alongside the PHP process.

Primary author:

    Roger Gee <rpg11a@acu.edu>

--------------------------------------------------------------------------------
Design

This extension works by embedding a Python interpreter inside PHP. This is
accomplished using libpython. Currently we target libpython2.7, however
upgrading to Python3 shouldn't be too hard.

The extension loads the required pygments modules at module initialization
time. The extension maintains a global pygments context that is reused for each
library call. This avoids having to load the pygments code for each
request. Note, this only really provides any benefit if PHP is long-lived
(meaning it doesn't call MINIT for each request but once for some sequence of
requests). If ZTS is enabled, the module opens multiple contexts.

The Pygments library must be in the python load path. This is installed
externally and not configured by this extension.

--------------------------------------------------------------------------------
Public API

    void pygments_set_options(array options)

        Sets formatter options on the global pygments context. These effects of
        this function are preserved until the next call to this function.

        options: An array of HtmlFormatter options to set on the
        formatter. Currently only the following subset is supported:

            - linenos (bool)
            - linenostart (int)
            - lineanchors (string)
            - noclasses (bool)
            - classprefix (string)
            - cssclass (string)     [default=php-pygments]
            - cssstyles (string)
            - prestyles (string)

    string pygments_highlight(string code[,string lexer,string filename])

        Uses the global pygments context to highlight the specified
        code. Pygments will try to guess which lexer to use based on the
        contents of the source code unless you specify a lexer or exclusively a
        filename.

        code: the source code to highlight

        (Note: only specify at most one of the following next parameters. They
        are meant to be used exclusively if at all.)

        lexer: an optional lexer to force; do not specify a filename if this is
        not null

        filename: the filename associated with the source code; Pygments will
        guess the lexer based on this filename; do not specify a lexer if this
        is not null; if Pygments doesn't find a lexer via filename, then the
        extension will attempt to have it guess via the source code content

--------------------------------------------------------------------------------
Considerations

I have not tested the ZTS code yet. I'm not sure about libpython's thread safety
either.

Use the python valgrind suppression file when testing for errors/memory leaks
with valgrind. See https://svn.python.org/projects/python/trunk/Misc/valgrind-python.supp.
